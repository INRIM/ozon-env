name: ci

on: [ push,pull_request ]

env:
  LANG: "it_IT.UTF-8"
  LANGUAGE: "it_IT:it"
  LC_ALL: "it_IT.UTF-8"

jobs:
  ci:
    name: Test on Python ${{ matrix.python-version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.10", "3.11" ]
        os: [ ubuntu-latest ]
    defaults:
      run:
        shell: bash
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}
      ISORT: ${{ matrix.isort-version }}
    steps:
      - uses: docker-practice/actions-setup-docker@master
      - run: |
          set -x
          docker version
      - uses: actions/checkout@v3
      - name: Set up ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          pip install -e .
          poetry install --no-interaction --no-root
      - name: Test with pytest
        run: |
          docker-compose up -d
          poetry run flake8 ozonenv/**/*.py
          poetry run pytest --cov --cov-report=html
          docker-compose up -d
      - name: Coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python -m pip install coveralls
          coveralls --service=github
